{
    "id": 8577,
    "name": "Tehnike programiranja (2016\/2017), Tutorijal 7, Zadatak 7",
    "languages": [
        "C++"
    ],
    "tools": {
        "compile": {
            "require": "g++",
            "features": [
                "optimize",
                "warn",
                "pedantic",
                "C++14"
            ]
        },
        "compile[debug]": {
            "require": "g++",
            "features": [
                "debug",
                "C++14"
            ]
        },
        "execute": {
            "environment": {
                "timeout": 10,
                "memory": 1000000
            }
        },
        "debug": [],
        "profile[memcheck]": {
            "require": "valgrind",
            "features": [
                "memcheck"
            ],
            "environment": {
                "timeout": 10
            }
        },
        "profile[sgcheck]": {
            "require": "valgrind",
            "features": [
                "sgcheck"
            ],
            "environment": {
                "timeout": 10
            }
        }
    },
    "tests": [
        {
            "compile": [],
            "options": [
                "silent",
                "terminate"
            ]
        },
        {
            "id": 3483,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/AT 1: test string unija i presjek\nTest();",
                    "use_markers": true
                },
                {
                    "position": "above_main",
                    "code": "void Test()\n{\n  std::set<std::string> s1{\"A\", \"B\", \"C\", \"C\", \"C\"}, s2{\"B\", \"B\", \"D\"};\n  for(auto x: Unija(s1, s2)) std::cout << x << \" \";\n  std::cout << std::endl;\n  for(auto x: Presjek(s1, s2)) std::cout << x << \" \";\n  std::cout << std::endl;\n}",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "A B C D \nB "
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 3484,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/AT 2: test int\nTest1();",
                    "use_markers": true
                },
                {
                    "position": "above_main",
                    "code": "void Test1()\n{\n  std::set<int> s1{500, -200, 100, 50, 30}, s2{30, 40, 50, 60, 100};\n  for(auto x: Unija(s1, s2)) std::cout << x << \" \";\n  std::cout << std::endl;\n  for(auto x: Presjek(s1, s2)) std::cout << x << \" \";\n  std::cout << std::endl;\n}",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "-200 30 40 50 60 100 500 \n30 50 100 "
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        },
        {
            "id": 3485,
            "patch": [
                {
                    "position": "main",
                    "code": "\/\/AT 3: test par unija i presjek\nTest2();",
                    "use_markers": true
                },
                {
                    "position": "above_main",
                    "code": "#include <utility>\n\nvoid Test2()\n{\n  std::set<std::pair<int, std::string>> s1{{1,\"abc\"}, {2,\"abc\"}, {3,\"bcd\"}}, s2{{4,\"abc\"}, {2,\"abc\"}, {5,\"bcd\"}};\n  for(auto x: Unija(s1, s2)) std::cout << \"{\" << x.first << \",\" << x.second << \"}\";\n  std::cout << std::endl;\n  for(auto x: Presjek(s1, s2)) std::cout << \"{\" << x.first << \",\" << x.second << \"}\";\n  std::cout << std::endl;\n}",
                    "use_markers": true
                }
            ],
            "compile[debug]": [],
            "execute": {
                "expect": [
                    "{1,abc}{2,abc}{3,bcd}{4,abc}{5,bcd}\n{2,abc}\n"
                ]
            },
            "debug": [],
            "profile[memcheck]": [],
            "profile[sgcheck]": []
        }
    ]
}